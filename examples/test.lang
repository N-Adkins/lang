var fib := fn (x: int) -> int {
    var state := [0, 1];
    var i := 0;
    while (i <= x) {
        state[i % 2] = state[0] + state[1]; 
        i = i + 1;
    }
    return state[i % 2]; 
};

var bad_fib := fn (self, x: int) -> int {
    if (x <= 1) {
        return x;
    }
    return self(x-1) + self(x-2);
};

var inplace_sort := fn (arr: [int], compare: fn (int, int) -> bool) -> void {
    var len := length(arr);
    var i := 0;
    while (i < len) {
        var j := 0;
        while (j < len - i - 1) {
            if (compare(arr[j], arr[j+1])) {
                var temp := arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = temp;
            }
            j = j + 1;
        }
        i = i + 1;
    }
    return;
};

var compare := fn (x: int, y: int) -> bool {
    return x > y;
};

fn merge(array: [int], low: int, mid: int, high: int) -> void {
    var low_size := mid - low + 1;
    var high_size := high - mid;

    var low_array := clone(array);
    var high_array := clone(array);
    
    var i := 0;
    while (i < low_size) {
        low_array[i] = array[low + i];
        i = i + 1;
    }
    
    i = 0;
    while (i < high_size) {
        high_array[i] = array[mid + i + 1];
        i = i + 1;
    }

    var low_ptr := 0;
    var high_ptr := 0;
    i = low;

    while (low_ptr < low_size and high_ptr < high_size) {
        if (low_array[low_ptr] < high_array[high_ptr]) {
            array[i] = low_array[low_ptr];
            low_ptr = low_ptr + 1;
        } else {
            array[i] = high_array[high_ptr];
            high_ptr = high_ptr + 1;
        }
        i = i + 1;
    }

    while (low_ptr < low_size) {
        array[i] = low_array[low_ptr];
        i = i + 1;
        low_ptr = low_ptr + 1;
    }

    while (high_ptr < high_size) {
        array[i] = high_array[high_ptr];
        i = i + 1;
        high_ptr = high_ptr + 1;
    }

    return;
};

fn merge_sort(array: [int], low: int, high: int) -> void {
    if (low >= high) {
        return;
    }
    var mid := (high + low) / 2;
    merge_sort(array, low, mid);
    merge_sort(array, mid + 1, high);
    merge(array, low, mid, high);
    return;   
};

var array := [822, 327, 1, 83, 94, 27, 128 ,12, 3,12 3,12,3 12,3 ,123 ,12,3 12,3,12];

print(array);
merge_sort(array, 0, length(array)-1);
print(array);
